/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package home_decor.view;

//import packages
import java.util.LinkedList;
import home_decor.util.ValidationUtil;
import java.awt.Color;
import home_decor.controller.ProductController;
import home_decor.controller.algorithim.BinarySearchAlgorithm;
import home_decor.model.HomeDecorModel;
//import javax.swing.DefaultComboBoxModel;
//import javax.swing.event.ChangeEvent;
//import javax.swing.event.ChangeListener;
import home_decor.controller.algorithim.SelectionSort;
import home_decor.controller.algorithim.InsertionSort;
import home_decor.controller.algorithim.MergeSort;
import java.util.ArrayList;
//import java.util.ArrayList;
//import java.util.ArrayList;

import java.util.List;

import javax.swing.JOptionPane;
//import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class HomeDecor extends javax.swing.JFrame {
    private List<HomeDecorModel> productList;//holds the list of products
    private ProductController productController;
    private java.awt.CardLayout cardLayout;
    private String selectedSortBy = null;

   /*//ggg
    // Selection Sort for Product IDs (integers)
    public static void selectionSort(int[] array) {
        int n = array.length;
        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (array[j] < array[minIndex]) {
                    minIndex = j;
                }
            }
            int temp = array[minIndex];
            array[minIndex] = array[i];
            array[i] = temp;
        }
    }

    // Insertion Sort for Product Names (strings)
    public static void insertionSort(String[] array) {
        int n = array.length;
        for (int i = 1; i < n; i++) {
            String key = array[i];
            int j = i - 1;
            while (j >= 0 && array[j].compareTo(key) > 0) {
                array[j + 1] = array[j];
                j--;
            }
            array[j + 1] = key;
        }
    }

    // Binary Search for Product IDs (integer)
    public static int binarySearch(int[] array, int target) {
        int left = 0;
        int right = array.length - 1;
        
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (array[mid] == target) {
                return mid;
            } else if (array[mid] < target) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        return -1; // Not found
    }

    // Method to handle search functionality when Search Button is clicked
    /*private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String searchData = SearchTextField.getText().trim();
        if (searchData.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a search term", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
    }*/
    //*/

    
    /**
     * Creates new form home_decor
     */
    public HomeDecor() {
        initComponents();
        initializeLayout();
        initializeData();
        productController=new ProductController();
        //product_table = new JTable();
    }
    
    
    
    // to change the panel
    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(loadingPnl, "LoadingScreen");
        getContentPane().add(loginPnl, "LoginScreen");
        getContentPane().add(mainPanel, "MainScreen");

        // Start with the loading screen
        loadScreen("LoadingScreen");
    }
           

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        dialogPanel = new javax.swing.JPanel();
        logoPanel = new javax.swing.JPanel();
        logoTxt = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();
        logOutPanel = new javax.swing.JPanel();
        logOutButton = new javax.swing.JButton();
        mainScreen = new javax.swing.JTabbedPane();
        homePnl = new javax.swing.JPanel();
        mainPicHome = new javax.swing.JPanel();
        mainPicHomePnl = new javax.swing.JPanel();
        newAriableLbl = new javax.swing.JLabel();
        mainPicHomeLbl = new javax.swing.JLabel();
        quoteLbl = new javax.swing.JLabel();
        quoteTxtLbl = new javax.swing.JLabel();
        shopNowBtn = new javax.swing.JButton();
        topCategoryLbl = new javax.swing.JLabel();
        livingRoomPic = new javax.swing.JPanel();
        livingPicLbl = new javax.swing.JLabel();
        livingTxtLbl = new javax.swing.JLabel();
        livingPic = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        livingRoomTxtLbl = new javax.swing.JLabel();
        bathroomPIc = new javax.swing.JPanel();
        bathroomPicLbl = new javax.swing.JLabel();
        bathroomTxtLbl = new javax.swing.JLabel();
        plantPic = new javax.swing.JPanel();
        plantPicLbl = new javax.swing.JLabel();
        plantPicTxtLbl = new javax.swing.JLabel();
        furniturePic = new javax.swing.JPanel();
        furnitureTxtLbl = new javax.swing.JLabel();
        furniturePicLbl = new javax.swing.JLabel();
        scrollPanel = new javax.swing.JScrollPane();
        aboutUsPnl = new javax.swing.JPanel();
        lightingPic = new javax.swing.JPanel();
        aboutUsPic = new javax.swing.JLabel();
        customerTxt = new javax.swing.JLabel();
        customerReviewPanel = new javax.swing.JPanel();
        customerReviewTxt = new javax.swing.JLabel();
        fiveStarPic = new javax.swing.JLabel();
        customerName = new javax.swing.JLabel();
        secondReviewPanel = new javax.swing.JPanel();
        secondReviewTxt = new javax.swing.JLabel();
        secondReviewName = new javax.swing.JLabel();
        fiveStartPict = new javax.swing.JLabel();
        servicePnl = new javax.swing.JPanel();
        serviceTxt = new javax.swing.JLabel();
        customizationServiceTxt = new javax.swing.JLabel();
        customizationPic = new javax.swing.JLabel();
        txtLbl = new javax.swing.JLabel();
        deliveryPnl = new javax.swing.JPanel();
        freeDeliveryTxt = new javax.swing.JLabel();
        deliveryTxt = new javax.swing.JLabel();
        deliveryPic = new javax.swing.JLabel();
        ourMissionPnl = new javax.swing.JPanel();
        missionMainTxt = new javax.swing.JLabel();
        missionTxt = new javax.swing.JLabel();
        missionPic = new javax.swing.JLabel();
        visionPnl = new javax.swing.JPanel();
        visionMainTxt = new javax.swing.JLabel();
        visionTxt = new javax.swing.JLabel();
        visionPic = new javax.swing.JLabel();
        adminDashboardPnl = new javax.swing.JPanel();
        newProductsPnl = new javax.swing.JPanel();
        newProductData = new javax.swing.JLabel();
        newProdTitle = new javax.swing.JLabel();
        noOfProductPnl = new javax.swing.JPanel();
        noOfProductData = new javax.swing.JLabel();
        numOfProductTitle = new javax.swing.JLabel();
        bestSellerPnl = new javax.swing.JPanel();
        bestSellerTitle = new javax.swing.JLabel();
        outOfStockTxt = new javax.swing.JLabel();
        profitPnl = new javax.swing.JPanel();
        profitCountData = new javax.swing.JLabel();
        profitTxt = new javax.swing.JLabel();
        scrollPnll = new javax.swing.JScrollPane();
        bestSellerCountTbl = new javax.swing.JTable();
        stockScrollPnl = new javax.swing.JScrollPane();
        outOfStockTbl = new javax.swing.JTable();
        productPnl = new javax.swing.JPanel();
        productTblScroll = new javax.swing.JScrollPane();
        productTbl = new javax.swing.JTable();
        homeDataFormPnl = new javax.swing.JPanel();
        productIdJField = new javax.swing.JTextField();
        categoryJField = new javax.swing.JTextField();
        priceJField = new javax.swing.JTextField();
        descriptionJField = new javax.swing.JTextField();
        dateJField = new javax.swing.JTextField();
        productNameJField = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        retrieveBtn = new javax.swing.JButton();
        statusJComboBox = new javax.swing.JComboBox<>();
        soldJField = new javax.swing.JTextField();
        stockQuantityJField = new javax.swing.JTextField();
        searchJField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        descRadioBtn = new javax.swing.JRadioButton();
        ascRadioBtn = new javax.swing.JRadioButton();
        productIdBtn = new javax.swing.JButton();
        priceBtn = new javax.swing.JButton();
        productBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        loginPnl = new javax.swing.JPanel();
        welcomePnl = new javax.swing.JPanel();
        welcomePic = new javax.swing.JLabel();
        loginAccTxt = new javax.swing.JLabel();
        userPic = new javax.swing.JLabel();
        usernameJField = new javax.swing.JTextField();
        pswLockPic = new javax.swing.JLabel();
        pswJField = new javax.swing.JPasswordField();
        forgotPswTxt = new javax.swing.JLabel();
        loginBtn = new javax.swing.JButton();
        adminLogin = new javax.swing.JPanel();
        loginError = new javax.swing.JLabel();
        loadingPnl = new javax.swing.JPanel();
        loadingSplashBar = new javax.swing.JProgressBar();
        loadingPicLbl = new javax.swing.JLabel();
        loadingSidePic = new javax.swing.JLabel();
        loadingLbl = new javax.swing.JLabel();
        sofaPicLbl = new javax.swing.JLabel();

        dialogPanel.setBackground(new java.awt.Color(94, 106, 88));
        dialogPanel.setForeground(new java.awt.Color(255, 255, 255));

        logoPanel.setBackground(new java.awt.Color(224, 220, 196));

        logoTxt.setBackground(new java.awt.Color(181, 144, 144));
        logoTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        logoTxt.setText("<html><p>Bliss INTERIORS");

        javax.swing.GroupLayout logoPanelLayout = new javax.swing.GroupLayout(logoPanel);
        logoPanel.setLayout(logoPanelLayout);
        logoPanelLayout.setHorizontalGroup(
            logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        logoPanelLayout.setVerticalGroup(
            logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(logoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        logoLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        logoLabel.setForeground(new java.awt.Color(255, 255, 255));
        logoLabel.setText("Create a home that tells your story");

        logOutPanel.setBackground(new java.awt.Color(224, 220, 196));

        logOutButton.setBackground(new java.awt.Color(94, 106, 88));
        logOutButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setText("Log Out");
        logOutButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout logOutPanelLayout = new javax.swing.GroupLayout(logOutPanel);
        logOutPanel.setLayout(logOutPanelLayout);
        logOutPanelLayout.setHorizontalGroup(
            logOutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logOutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        logOutPanelLayout.setVerticalGroup(
            logOutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logOutPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout dialogPanelLayout = new javax.swing.GroupLayout(dialogPanel);
        dialogPanel.setLayout(dialogPanelLayout);
        dialogPanelLayout.setHorizontalGroup(
            dialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogPanelLayout.createSequentialGroup()
                .addComponent(logoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(280, 280, 280)
                .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 376, Short.MAX_VALUE)
                .addComponent(logOutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        dialogPanelLayout.setVerticalGroup(
            dialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogPanelLayout.createSequentialGroup()
                .addComponent(logoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(dialogPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(logoLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(logOutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mainScreen.setBackground(new java.awt.Color(224, 220, 196));

        homePnl.setPreferredSize(new java.awt.Dimension(1443, 700));

        mainPicHome.setBackground(new java.awt.Color(224, 220, 196));

        mainPicHomePnl.setBackground(new java.awt.Color(94, 106, 88));

        newAriableLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        newAriableLbl.setForeground(new java.awt.Color(255, 255, 255));
        newAriableLbl.setText("NEW ARRIVALS");

        mainPicHomeLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/lamp(home).png"))); // NOI18N

        quoteLbl.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        quoteLbl.setForeground(new java.awt.Color(255, 255, 255));
        quoteLbl.setText("Declutter Your Life\"");

        quoteTxtLbl.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        quoteTxtLbl.setForeground(new java.awt.Color(255, 255, 255));
        quoteTxtLbl.setText("\"Declutter Your Space");

        shopNowBtn.setBackground(new java.awt.Color(0, 0, 0));
        shopNowBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        shopNowBtn.setForeground(new java.awt.Color(255, 255, 255));
        shopNowBtn.setText("Shop Now");
        shopNowBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.lightGray));
        shopNowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shopNowBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPicHomePnlLayout = new javax.swing.GroupLayout(mainPicHomePnl);
        mainPicHomePnl.setLayout(mainPicHomePnlLayout);
        mainPicHomePnlLayout.setHorizontalGroup(
            mainPicHomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPicHomePnlLayout.createSequentialGroup()
                .addGroup(mainPicHomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPicHomePnlLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(mainPicHomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quoteTxtLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainPicHomePnlLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(newAriableLbl))))
                    .addGroup(mainPicHomePnlLayout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(quoteLbl))
                    .addGroup(mainPicHomePnlLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(shopNowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(192, 192, 192)
                .addComponent(mainPicHomeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1360, Short.MAX_VALUE))
        );
        mainPicHomePnlLayout.setVerticalGroup(
            mainPicHomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPicHomePnlLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(newAriableLbl)
                .addGap(18, 18, 18)
                .addComponent(quoteTxtLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quoteLbl)
                .addGap(29, 29, 29)
                .addComponent(shopNowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(mainPicHomePnlLayout.createSequentialGroup()
                .addComponent(mainPicHomeLbl)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        topCategoryLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        topCategoryLbl.setText("Top Categories");

        livingRoomPic.setBackground(new java.awt.Color(249, 245, 242));

        livingPicLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/pexels-kowalievska-1148955.jpg"))); // NOI18N

        livingTxtLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        livingTxtLbl.setText("Lighting");

        javax.swing.GroupLayout livingRoomPicLayout = new javax.swing.GroupLayout(livingRoomPic);
        livingRoomPic.setLayout(livingRoomPicLayout);
        livingRoomPicLayout.setHorizontalGroup(
            livingRoomPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, livingRoomPicLayout.createSequentialGroup()
                .addComponent(livingPicLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(livingRoomPicLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(livingTxtLbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        livingRoomPicLayout.setVerticalGroup(
            livingRoomPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(livingRoomPicLayout.createSequentialGroup()
                .addComponent(livingPicLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(livingTxtLbl))
        );

        livingPic.setBackground(new java.awt.Color(243, 243, 251));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/pexels-fotoaibe-1643383.jpg"))); // NOI18N

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("Living Room");

        javax.swing.GroupLayout livingPicLayout = new javax.swing.GroupLayout(livingPic);
        livingPic.setLayout(livingPicLayout);
        livingPicLayout.setHorizontalGroup(
            livingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, livingPicLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel11))
            .addGroup(livingPicLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        livingPicLayout.setVerticalGroup(
            livingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(livingPicLayout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14))
        );

        bathroomPIc.setBackground(new java.awt.Color(249, 245, 242));

        bathroomPicLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/pexels-heyho-6207947.jpg"))); // NOI18N

        bathroomTxtLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bathroomTxtLbl.setText("Bathroom");

        javax.swing.GroupLayout bathroomPIcLayout = new javax.swing.GroupLayout(bathroomPIc);
        bathroomPIc.setLayout(bathroomPIcLayout);
        bathroomPIcLayout.setHorizontalGroup(
            bathroomPIcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bathroomPIcLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(bathroomTxtLbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(bathroomPIcLayout.createSequentialGroup()
                .addComponent(bathroomPicLbl)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        bathroomPIcLayout.setVerticalGroup(
            bathroomPIcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bathroomPIcLayout.createSequentialGroup()
                .addComponent(bathroomPicLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(bathroomTxtLbl))
        );

        plantPic.setBackground(new java.awt.Color(243, 243, 251));

        plantPicLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/pexels-designecologist-1005058.jpg"))); // NOI18N

        plantPicTxtLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        plantPicTxtLbl.setText("Plants");

        javax.swing.GroupLayout plantPicLayout = new javax.swing.GroupLayout(plantPic);
        plantPic.setLayout(plantPicLayout);
        plantPicLayout.setHorizontalGroup(
            plantPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(plantPicLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, plantPicLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(plantPicTxtLbl)
                .addGap(95, 95, 95))
        );
        plantPicLayout.setVerticalGroup(
            plantPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plantPicLayout.createSequentialGroup()
                .addComponent(plantPicLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 134, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(plantPicTxtLbl))
        );

        furniturePic.setBackground(new java.awt.Color(249, 245, 242));

        furnitureTxtLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        furnitureTxtLbl.setText("Furniture");

        furniturePicLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/pexels-pixabay-276583.jpg"))); // NOI18N

        javax.swing.GroupLayout furniturePicLayout = new javax.swing.GroupLayout(furniturePic);
        furniturePic.setLayout(furniturePicLayout);
        furniturePicLayout.setHorizontalGroup(
            furniturePicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(furniturePicLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(furnitureTxtLbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(furniturePicLayout.createSequentialGroup()
                .addComponent(furniturePicLbl)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        furniturePicLayout.setVerticalGroup(
            furniturePicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(furniturePicLayout.createSequentialGroup()
                .addComponent(furniturePicLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(furnitureTxtLbl))
        );

        javax.swing.GroupLayout mainPicHomeLayout = new javax.swing.GroupLayout(mainPicHome);
        mainPicHome.setLayout(mainPicHomeLayout);
        mainPicHomeLayout.setHorizontalGroup(
            mainPicHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPicHomeLayout.createSequentialGroup()
                .addGroup(mainPicHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPicHomeLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(livingRoomPic, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(livingPic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(bathroomPIc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(plantPic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(furniturePic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1468, 1468, 1468)
                        .addComponent(livingRoomTxtLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPicHomeLayout.createSequentialGroup()
                        .addGap(636, 636, 636)
                        .addComponent(topCategoryLbl))
                    .addGroup(mainPicHomeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mainPicHomePnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPicHomeLayout.setVerticalGroup(
            mainPicHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPicHomeLayout.createSequentialGroup()
                .addComponent(mainPicHomePnl, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(mainPicHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPicHomeLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(livingRoomTxtLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mainPicHomeLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(mainPicHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(mainPicHomeLayout.createSequentialGroup()
                                .addComponent(topCategoryLbl)
                                .addGap(25, 25, 25)
                                .addGroup(mainPicHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(livingPic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(livingRoomPic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bathroomPIc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(plantPic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(furniturePic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 448, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout homePnlLayout = new javax.swing.GroupLayout(homePnl);
        homePnl.setLayout(homePnlLayout);
        homePnlLayout.setHorizontalGroup(
            homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePnlLayout.createSequentialGroup()
                .addComponent(mainPicHome, javax.swing.GroupLayout.PREFERRED_SIZE, 2860, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 422, Short.MAX_VALUE))
        );
        homePnlLayout.setVerticalGroup(
            homePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePnlLayout.createSequentialGroup()
                .addComponent(scrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePnlLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mainPicHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        mainScreen.addTab("Home", homePnl);

        lightingPic.setBackground(new java.awt.Color(94, 106, 88));

        aboutUsPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/pexels-atbo-66986-245240.jpg"))); // NOI18N

        customerTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        customerTxt.setForeground(new java.awt.Color(255, 255, 255));
        customerTxt.setText("Out Happy Customers");

        customerReviewPanel.setBackground(new java.awt.Color(224, 220, 196));

        customerReviewTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        customerReviewTxt.setText("<html><p>\"I absolutely love the pieces I ordered from BlissInterior. The quality is fantastic, and they truly transformed my living area into a cozy, stylish space. The customer service was also top-notch. I will definitely be shopping here again!\"");

        fiveStarPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/istockphoto-1367691681-1024x1024-removebg-preview (1).png"))); // NOI18N

        customerName.setText("- Oliver. K");

        javax.swing.GroupLayout customerReviewPanelLayout = new javax.swing.GroupLayout(customerReviewPanel);
        customerReviewPanel.setLayout(customerReviewPanelLayout);
        customerReviewPanelLayout.setHorizontalGroup(
            customerReviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerReviewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(customerReviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customerReviewPanelLayout.createSequentialGroup()
                        .addComponent(customerName)
                        .addGap(0, 223, Short.MAX_VALUE))
                    .addComponent(customerReviewTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerReviewPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(fiveStarPic, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        customerReviewPanelLayout.setVerticalGroup(
            customerReviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerReviewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fiveStarPic, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(customerReviewTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        secondReviewPanel.setBackground(new java.awt.Color(224, 220, 196));

        secondReviewTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        secondReviewTxt.setText("<html><p>\"I am so impressed with the attention to detail in every piece I purchased from BlissINteriors. Each items feels unique and thoughtfully designed. The rug I bought completely transformed my living area, and the wall art is now the focal point of my living space. Can't wait to shop here again!\"");

        secondReviewName.setText("- Rachel. M");

        fiveStartPict.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/istockphoto-1367691681-1024x1024-removebg-preview (1).png"))); // NOI18N

        javax.swing.GroupLayout secondReviewPanelLayout = new javax.swing.GroupLayout(secondReviewPanel);
        secondReviewPanel.setLayout(secondReviewPanelLayout);
        secondReviewPanelLayout.setHorizontalGroup(
            secondReviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secondReviewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(secondReviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(secondReviewTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(secondReviewPanelLayout.createSequentialGroup()
                        .addComponent(secondReviewName)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secondReviewPanelLayout.createSequentialGroup()
                        .addGap(0, 201, Short.MAX_VALUE)
                        .addComponent(fiveStartPict, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        secondReviewPanelLayout.setVerticalGroup(
            secondReviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secondReviewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fiveStartPict, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(secondReviewTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(secondReviewName, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        servicePnl.setBackground(new java.awt.Color(199, 194, 194));

        serviceTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        serviceTxt.setText("<html><p> Not sure how to style your space? Our experienced design team is here to help! Whether you’re looking for a complete room makeover or advice on picking the perfect accent piece, we provide personalized recommendations tailored to your taste and needs");

        customizationServiceTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        customizationServiceTxt.setText("Personalized Customization");

        customizationPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/person.png"))); // NOI18N

        javax.swing.GroupLayout servicePnlLayout = new javax.swing.GroupLayout(servicePnl);
        servicePnl.setLayout(servicePnlLayout);
        servicePnlLayout.setHorizontalGroup(
            servicePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(servicePnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(servicePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(servicePnlLayout.createSequentialGroup()
                        .addComponent(customizationServiceTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customizationPic, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(servicePnlLayout.createSequentialGroup()
                        .addComponent(serviceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        servicePnlLayout.setVerticalGroup(
            servicePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(servicePnlLayout.createSequentialGroup()
                .addGroup(servicePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(servicePnlLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(customizationServiceTxt)
                        .addGap(18, 18, 18))
                    .addGroup(servicePnlLayout.createSequentialGroup()
                        .addComponent(customizationPic)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(serviceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );

        txtLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtLbl.setForeground(new java.awt.Color(255, 255, 255));
        txtLbl.setText("Our Services");

        deliveryPnl.setBackground(new java.awt.Color(199, 194, 194));

        freeDeliveryTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        freeDeliveryTxt.setText("Hassle Free Delivery");

        deliveryTxt.setBackground(new java.awt.Color(224, 220, 196));
        deliveryTxt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deliveryTxt.setText("<html><p> \nWe ensure a smooth shopping experience from start to finish. Our reliable delivery service brings your favorite items right to your doorstep, carefully packaged and on time.");

        deliveryPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/free-shipping.png"))); // NOI18N

        javax.swing.GroupLayout deliveryPnlLayout = new javax.swing.GroupLayout(deliveryPnl);
        deliveryPnl.setLayout(deliveryPnlLayout);
        deliveryPnlLayout.setHorizontalGroup(
            deliveryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deliveryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deliveryPnlLayout.createSequentialGroup()
                        .addComponent(freeDeliveryTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deliveryPic, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deliveryPnlLayout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addComponent(deliveryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        deliveryPnlLayout.setVerticalGroup(
            deliveryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deliveryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(freeDeliveryTxt)
                    .addComponent(deliveryPic, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(deliveryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        ourMissionPnl.setBackground(new java.awt.Color(224, 220, 196));

        missionMainTxt.setForeground(new java.awt.Color(255, 255, 255));
        missionMainTxt.setText("<html><p>In BlissfullInteriors.com, our mission is to trandform houses into homes by curating a unique collection of stylish, high-quality, and affordable home decor. We believe every sace has the potential to tell a story, and we're here to help you create yours.\n\nFrom timeless classics to medern trends, we are committed to offering products that inspire creativity, reflect individually, and bring warmth to your living spaces. \n\nWhether you're seeking a single statement piece or a complete room makeover, we aim to provide exceptional service, throghtful designs , and semaless shopping experience to help you turn your vision into reality.\n\nLets's create spaces that feel like home, together.");

        missionTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        missionTxt.setForeground(new java.awt.Color(255, 255, 255));
        missionTxt.setText("Our Mission");

        missionPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/target (1).png"))); // NOI18N

        javax.swing.GroupLayout ourMissionPnlLayout = new javax.swing.GroupLayout(ourMissionPnl);
        ourMissionPnl.setLayout(ourMissionPnlLayout);
        ourMissionPnlLayout.setHorizontalGroup(
            ourMissionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ourMissionPnlLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(ourMissionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ourMissionPnlLayout.createSequentialGroup()
                        .addComponent(missionMainTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ourMissionPnlLayout.createSequentialGroup()
                        .addComponent(missionTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(missionPic, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(340, 340, 340))))
        );
        ourMissionPnlLayout.setVerticalGroup(
            ourMissionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ourMissionPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ourMissionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(missionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(missionPic, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(missionMainTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        visionPnl.setBackground(new java.awt.Color(224, 220, 196));

        visionMainTxt.setForeground(new java.awt.Color(255, 255, 255));
        visionMainTxt.setText("<html><p>In BlissfullInteriors.com, our vision is to inspire and elevate every home through thoughtfully curated decor  that reflets individually, comfort, and timeless style. We believe that your home should be sanctuary -a place that nurtures creativity, fosters well-being, and brings joy to everyday living. Our goal is to provide a seamless shopping experiece, offering unique and high-quality pieces that blend aesthetics with functionality allowing you to transform any space into  a true relection of your personality and lifestyle. From classic to contemporary, our diverse collection is designed to help you create a home that feels as beautiful as it is inviiting.");

        visionTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        visionTxt.setForeground(new java.awt.Color(255, 255, 255));
        visionTxt.setText("Our Vision");

        visionPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/shared-vision.png"))); // NOI18N

        javax.swing.GroupLayout visionPnlLayout = new javax.swing.GroupLayout(visionPnl);
        visionPnl.setLayout(visionPnlLayout);
        visionPnlLayout.setHorizontalGroup(
            visionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visionPnlLayout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addGroup(visionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visionPnlLayout.createSequentialGroup()
                        .addComponent(visionTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(visionPic, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(239, 239, 239))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visionPnlLayout.createSequentialGroup()
                        .addComponent(visionMainTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        visionPnlLayout.setVerticalGroup(
            visionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visionPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(visionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(visionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(visionPic, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visionMainTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout lightingPicLayout = new javax.swing.GroupLayout(lightingPic);
        lightingPic.setLayout(lightingPicLayout);
        lightingPicLayout.setHorizontalGroup(
            lightingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lightingPicLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lightingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lightingPicLayout.createSequentialGroup()
                        .addComponent(aboutUsPic)
                        .addGap(48, 48, 48)
                        .addComponent(visionPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ourMissionPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(lightingPicLayout.createSequentialGroup()
                        .addGroup(lightingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerTxt)
                            .addGroup(lightingPicLayout.createSequentialGroup()
                                .addComponent(customerReviewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(secondReviewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(55, 55, 55)
                        .addGroup(lightingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lightingPicLayout.createSequentialGroup()
                                .addComponent(servicePnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(deliveryPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtLbl))))
                .addContainerGap(952, Short.MAX_VALUE))
        );
        lightingPicLayout.setVerticalGroup(
            lightingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lightingPicLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(lightingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(lightingPicLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(deliveryPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(lightingPicLayout.createSequentialGroup()
                        .addGroup(lightingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lightingPicLayout.createSequentialGroup()
                                .addComponent(aboutUsPic)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lightingPicLayout.createSequentialGroup()
                                .addGroup(lightingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(visionPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ourMissionPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addGroup(lightingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtLbl)
                                    .addComponent(customerTxt))))
                        .addGroup(lightingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lightingPicLayout.createSequentialGroup()
                                .addGroup(lightingPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(customerReviewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(secondReviewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lightingPicLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(servicePnl, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout aboutUsPnlLayout = new javax.swing.GroupLayout(aboutUsPnl);
        aboutUsPnl.setLayout(aboutUsPnlLayout);
        aboutUsPnlLayout.setHorizontalGroup(
            aboutUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutUsPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lightingPic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 1113, Short.MAX_VALUE))
        );
        aboutUsPnlLayout.setVerticalGroup(
            aboutUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutUsPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lightingPic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainScreen.addTab("About Us", aboutUsPnl);

        adminDashboardPnl.setBackground(new java.awt.Color(224, 220, 196));

        newProductsPnl.setBackground(new java.awt.Color(94, 106, 88));

        newProductData.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        newProductData.setText("0");

        javax.swing.GroupLayout newProductsPnlLayout = new javax.swing.GroupLayout(newProductsPnl);
        newProductsPnl.setLayout(newProductsPnlLayout);
        newProductsPnlLayout.setHorizontalGroup(
            newProductsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newProductsPnlLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(newProductData, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );
        newProductsPnlLayout.setVerticalGroup(
            newProductsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newProductsPnlLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(newProductData)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        newProdTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        newProdTitle.setForeground(new java.awt.Color(255, 255, 255));
        newProdTitle.setText("New Arrivals");

        noOfProductPnl.setBackground(new java.awt.Color(94, 106, 88));

        noOfProductData.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        noOfProductData.setText("0");

        javax.swing.GroupLayout noOfProductPnlLayout = new javax.swing.GroupLayout(noOfProductPnl);
        noOfProductPnl.setLayout(noOfProductPnlLayout);
        noOfProductPnlLayout.setHorizontalGroup(
            noOfProductPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, noOfProductPnlLayout.createSequentialGroup()
                .addContainerGap(126, Short.MAX_VALUE)
                .addComponent(noOfProductData, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
        );
        noOfProductPnlLayout.setVerticalGroup(
            noOfProductPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(noOfProductPnlLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(noOfProductData)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        numOfProductTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        numOfProductTitle.setForeground(new java.awt.Color(255, 255, 255));
        numOfProductTitle.setText("No Of Products");

        bestSellerPnl.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout bestSellerPnlLayout = new javax.swing.GroupLayout(bestSellerPnl);
        bestSellerPnl.setLayout(bestSellerPnlLayout);
        bestSellerPnlLayout.setHorizontalGroup(
            bestSellerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 404, Short.MAX_VALUE)
        );
        bestSellerPnlLayout.setVerticalGroup(
            bestSellerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        bestSellerTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bestSellerTitle.setForeground(new java.awt.Color(255, 255, 255));
        bestSellerTitle.setText("Best Seller Category");

        outOfStockTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        outOfStockTxt.setForeground(new java.awt.Color(255, 255, 255));
        outOfStockTxt.setText("Out Of Stock");

        profitPnl.setBackground(new java.awt.Color(94, 106, 88));

        profitCountData.setBackground(new java.awt.Color(94, 106, 88));
        profitCountData.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        profitCountData.setText("0");

        javax.swing.GroupLayout profitPnlLayout = new javax.swing.GroupLayout(profitPnl);
        profitPnl.setLayout(profitPnlLayout);
        profitPnlLayout.setHorizontalGroup(
            profitPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profitPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(profitCountData, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );
        profitPnlLayout.setVerticalGroup(
            profitPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profitPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(profitCountData, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );

        profitTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        profitTxt.setForeground(new java.awt.Color(255, 255, 255));
        profitTxt.setText("Profit");

        bestSellerCountTbl.setBackground(new java.awt.Color(94, 106, 88));
        bestSellerCountTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Category", "Product Name", "Sold"
            }
        ));
        scrollPnll.setViewportView(bestSellerCountTbl);

        outOfStockTbl.setBackground(new java.awt.Color(94, 106, 88));
        outOfStockTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Out of stock"
            }
        ));
        stockScrollPnl.setViewportView(outOfStockTbl);

        javax.swing.GroupLayout adminDashboardPnlLayout = new javax.swing.GroupLayout(adminDashboardPnl);
        adminDashboardPnl.setLayout(adminDashboardPnlLayout);
        adminDashboardPnlLayout.setHorizontalGroup(
            adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDashboardPnlLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(noOfProductPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(outOfStockTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(stockScrollPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(numOfProductTitle))
                .addGap(113, 113, 113)
                .addGroup(adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(newProductsPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(scrollPnll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(bestSellerTitle))
                    .addComponent(newProdTitle))
                .addGap(96, 96, 96)
                .addGroup(adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminDashboardPnlLayout.createSequentialGroup()
                        .addComponent(profitTxt)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(adminDashboardPnlLayout.createSequentialGroup()
                        .addComponent(profitPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(bestSellerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1747, 1747, 1747))
        );
        adminDashboardPnlLayout.setVerticalGroup(
            adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDashboardPnlLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outOfStockTxt)
                    .addComponent(bestSellerTitle))
                .addGap(18, 18, 18)
                .addGroup(adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(scrollPnll, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(stockScrollPnl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminDashboardPnlLayout.createSequentialGroup()
                        .addComponent(bestSellerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminDashboardPnlLayout.createSequentialGroup()
                        .addGroup(adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newProdTitle, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(numOfProductTitle)
                                .addComponent(profitTxt)))
                        .addGap(18, 18, 18)
                        .addGroup(adminDashboardPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newProductsPnl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(noOfProductPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(profitPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))))
        );

        mainScreen.addTab("Admin Dashboard", adminDashboardPnl);

        productPnl.setBackground(new java.awt.Color(255, 255, 255));

        productTbl.setBackground(new java.awt.Color(94, 106, 88));
        productTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Id", "Product Name", "Category", "Price", "Status", "Description", "Stock Quantity", "Sold ", "Date"
            }
        ));
        productTblScroll.setViewportView(productTbl);

        homeDataFormPnl.setBackground(new java.awt.Color(94, 106, 88));
        homeDataFormPnl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Home Decor Data Form", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        productIdJField.setBackground(new java.awt.Color(51, 51, 51));
        productIdJField.setForeground(new java.awt.Color(255, 255, 255));
        productIdJField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Product Id", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        productIdJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productIdJFieldActionPerformed(evt);
            }
        });

        categoryJField.setBackground(new java.awt.Color(51, 51, 51));
        categoryJField.setForeground(new java.awt.Color(255, 255, 255));
        categoryJField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Category", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        categoryJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryJFieldActionPerformed(evt);
            }
        });

        priceJField.setBackground(new java.awt.Color(51, 51, 51));
        priceJField.setForeground(new java.awt.Color(255, 255, 255));
        priceJField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Price", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        priceJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceJFieldActionPerformed(evt);
            }
        });

        descriptionJField.setBackground(new java.awt.Color(51, 51, 51));
        descriptionJField.setForeground(new java.awt.Color(255, 255, 255));
        descriptionJField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Description", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        descriptionJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionJFieldActionPerformed(evt);
            }
        });

        dateJField.setBackground(new java.awt.Color(51, 51, 51));
        dateJField.setForeground(new java.awt.Color(255, 255, 255));
        dateJField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Date", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        dateJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateJFieldActionPerformed(evt);
            }
        });

        productNameJField.setBackground(new java.awt.Color(51, 51, 51));
        productNameJField.setForeground(new java.awt.Color(255, 255, 255));
        productNameJField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Product Name", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        productNameJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNameJFieldActionPerformed(evt);
            }
        });

        addBtn.setText("ADD");
        addBtn.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("UPDATE");
        updateBtn.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("CLEAR");
        clearBtn.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        retrieveBtn.setText("RETRIEVE");
        retrieveBtn.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        retrieveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrieveBtnActionPerformed(evt);
            }
        });

        statusJComboBox.setBackground(new java.awt.Color(51, 51, 51));
        statusJComboBox.setForeground(new java.awt.Color(255, 255, 255));
        statusJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Out Of Stock" }));
        statusJComboBox.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        soldJField.setBackground(new java.awt.Color(51, 51, 51));
        soldJField.setForeground(new java.awt.Color(255, 255, 255));
        soldJField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sold", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        soldJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soldJFieldActionPerformed(evt);
            }
        });

        stockQuantityJField.setBackground(new java.awt.Color(51, 51, 51));
        stockQuantityJField.setForeground(new java.awt.Color(255, 255, 255));
        stockQuantityJField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stock Quantity", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        stockQuantityJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockQuantityJFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout homeDataFormPnlLayout = new javax.swing.GroupLayout(homeDataFormPnl);
        homeDataFormPnl.setLayout(homeDataFormPnlLayout);
        homeDataFormPnlLayout.setHorizontalGroup(
            homeDataFormPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeDataFormPnlLayout.createSequentialGroup()
                .addGap(335, 335, 335)
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(retrieveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(homeDataFormPnlLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(productIdJField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(productNameJField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(categoryJField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(priceJField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(descriptionJField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(stockQuantityJField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(soldJField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(dateJField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(statusJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        homeDataFormPnlLayout.setVerticalGroup(
            homeDataFormPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeDataFormPnlLayout.createSequentialGroup()
                .addGroup(homeDataFormPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homeDataFormPnlLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(homeDataFormPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(soldJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stockQuantityJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descriptionJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoryJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productNameJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productIdJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(homeDataFormPnlLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(statusJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(homeDataFormPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(updateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(retrieveBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(72, 72, 72))
        );

        searchJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJFieldActionPerformed(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(94, 106, 88));
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        descRadioBtn.setText("Descending");
        descRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descRadioBtnActionPerformed(evt);
            }
        });

        ascRadioBtn.setText("Ascending");
        ascRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ascRadioBtnActionPerformed(evt);
            }
        });

        productIdBtn.setText("Product ID");
        productIdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productIdBtnActionPerformed(evt);
            }
        });

        priceBtn.setText("Price");
        priceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceBtnActionPerformed(evt);
            }
        });

        productBtn.setText("Product Name");
        productBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productBtnActionPerformed(evt);
            }
        });

        resetBtn.setText("Reset");

        javax.swing.GroupLayout productPnlLayout = new javax.swing.GroupLayout(productPnl);
        productPnl.setLayout(productPnlLayout);
        productPnlLayout.setHorizontalGroup(
            productPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(productPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productPnlLayout.createSequentialGroup()
                        .addComponent(productIdBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(priceBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(productBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ascRadioBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(descRadioBtn)
                        .addGap(535, 535, 535)
                        .addComponent(searchJField, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn))
                    .addComponent(homeDataFormPnl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(productTblScroll, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(2024, Short.MAX_VALUE))
        );
        productPnlLayout.setVerticalGroup(
            productPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(productPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(productPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchBtn)
                        .addComponent(descRadioBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ascRadioBtn)
                        .addComponent(priceBtn)
                        .addComponent(productIdBtn)
                        .addComponent(productBtn)
                        .addComponent(resetBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productTblScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(homeDataFormPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        mainScreen.addTab("Product", productPnl);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainScreen)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(dialogPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dialogPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(209, Short.MAX_VALUE))
        );

        welcomePnl.setBackground(new java.awt.Color(224, 220, 196));

        welcomePic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/Minimalist Circle Accent Wall with Ambient Lighting for a Serene Living Space.jpg"))); // NOI18N

        loginAccTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        loginAccTxt.setForeground(new java.awt.Color(255, 255, 255));
        loginAccTxt.setText("Login Account");

        userPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/user (2).png"))); // NOI18N

        usernameJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameJFieldActionPerformed(evt);
            }
        });

        pswLockPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/padlock.png"))); // NOI18N

        pswJField.setText("jPasswordField1");
        pswJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pswJFieldActionPerformed(evt);
            }
        });

        forgotPswTxt.setForeground(new java.awt.Color(141, 110, 99));
        forgotPswTxt.setText("Forgot your password?");

        loginBtn.setBackground(new java.awt.Color(94, 106, 88));
        loginBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        loginBtn.setForeground(new java.awt.Color(255, 255, 255));
        loginBtn.setText("Login ");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout welcomePnlLayout = new javax.swing.GroupLayout(welcomePnl);
        welcomePnl.setLayout(welcomePnlLayout);
        welcomePnlLayout.setHorizontalGroup(
            welcomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePnlLayout.createSequentialGroup()
                .addComponent(welcomePic, javax.swing.GroupLayout.DEFAULT_SIZE, 856, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(welcomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pswLockPic, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(userPic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(welcomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pswJField, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameJField, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(forgotPswTxt)
                    .addComponent(loginAccTxt)
                    .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(267, Short.MAX_VALUE))
        );
        welcomePnlLayout.setVerticalGroup(
            welcomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(welcomePic, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(welcomePnlLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(loginAccTxt)
                .addGap(82, 82, 82)
                .addGroup(welcomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userPic, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameJField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(welcomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pswLockPic, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pswJField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(forgotPswTxt)
                .addGap(34, 34, 34)
                .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminLogin.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout adminLoginLayout = new javax.swing.GroupLayout(adminLogin);
        adminLogin.setLayout(adminLoginLayout);
        adminLoginLayout.setHorizontalGroup(
            adminLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLoginLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(loginError, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(289, Short.MAX_VALUE))
        );
        adminLoginLayout.setVerticalGroup(
            adminLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginError, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout loginPnlLayout = new javax.swing.GroupLayout(loginPnl);
        loginPnl.setLayout(loginPnlLayout);
        loginPnlLayout.setHorizontalGroup(
            loginPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPnlLayout.createSequentialGroup()
                .addComponent(welcomePnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(adminLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        loginPnlLayout.setVerticalGroup(
            loginPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(welcomePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(adminLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loadingPnl.setBackground(new java.awt.Color(173, 144, 114));

        loadingSplashBar.setBackground(new java.awt.Color(32, 37, 15));
        loadingSplashBar.setForeground(new java.awt.Color(32, 37, 15));

        loadingSidePic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/И.jpg"))); // NOI18N

        loadingLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        loadingLbl.setForeground(new java.awt.Color(32, 37, 15));
        loadingLbl.setText("Loading....");

        sofaPicLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_decor/resources/Furniture_icons-removebg-preview.png"))); // NOI18N

        javax.swing.GroupLayout loadingPnlLayout = new javax.swing.GroupLayout(loadingPnl);
        loadingPnl.setLayout(loadingPnlLayout);
        loadingPnlLayout.setHorizontalGroup(
            loadingPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadingPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadingPicLbl)
                .addGroup(loadingPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loadingPnlLayout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addGroup(loadingPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loadingLbl)
                            .addComponent(loadingSplashBar, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(loadingPnlLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(sofaPicLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(96, 96, 96)
                .addComponent(loadingSidePic, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(618, Short.MAX_VALUE))
        );
        loadingPnlLayout.setVerticalGroup(
            loadingPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadingPnlLayout.createSequentialGroup()
                .addGap(0, 394, Short.MAX_VALUE)
                .addComponent(sofaPicLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(loadingLbl)
                .addGap(26, 26, 26)
                .addComponent(loadingSplashBar, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(176, 176, 176))
            .addGroup(loadingPnlLayout.createSequentialGroup()
                .addGroup(loadingPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loadingPnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(loadingPicLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(loadingSidePic, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(loadingPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadingPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // adding data in the table
    private void initializeData() {
        productList = new LinkedList<>();

        // Registering sample products
        registerProduct(new HomeDecorModel(79128, "Floor Lamp", "Living Room", 10000,"Available","Ostrich Feather Lamp",20,15,"2012-12-12"));
        registerProduct(new HomeDecorModel(45126, "Table Lamp", "Study Room", 1200,"Available","Classic Banker's Lamp",20,10,"2010-12-12"));
        registerProduct(new HomeDecorModel(23457, "Wallpaper", "Decor", 1000,"Available","Nightingale Birds Gold",20,15,"2012-12-12"));
        registerProduct(new HomeDecorModel(12662, "Knife Set", "Kitchen", 999,"Available","Silver Knife Set",22,11,"2012-12-12"));
        registerProduct(new HomeDecorModel(12671, "Bathtub", "Bathroom", 1199,"Available","Vintage white",22,11,"2012-12-12"));
        // update product count
        updateOldProductCountLabel();
    }
    
    // method to add product in the table
    
    private void registerProduct(HomeDecorModel decor){
        productList.add(decor);
        DefaultTableModel model=(DefaultTableModel) productTbl.getModel();
        model.addRow(new Object[]{
            decor.getProduct_Id(),decor.getProduct_Name(),decor.getCategory(),decor.getPrice(),decor.getStatus(),decor.getDescription(),decor.getStockQuantity(),decor.getSold(),decor.getDate()
                
        });
       //updateProductCountLabel();
    }
    
    //
    
    
    
    //
    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(40); // Simulated delay for progress bar
                    publish(i); // Publish progress
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                loadingSplashBar.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }
    
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }
    //
    
    /**
     * Handles the logout button action. Clears the login fields and switches
     * back to the login screen.
     *
     * @param evt The action event triggered by the logout button.
     */
   
    //
    private void productIdJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productIdJFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productIdJFieldActionPerformed

    private void categoryJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryJFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryJFieldActionPerformed

    private void priceJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceJFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceJFieldActionPerformed

    private void descriptionJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionJFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descriptionJFieldActionPerformed

    private void dateJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateJFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateJFieldActionPerformed

    private void productNameJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productNameJFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productNameJFieldActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO add your handling code here:
        // Get the username and password input
        String username = usernameJField.getText();
        String password = new String(pswJField.getPassword());

        // Check if username or password is empty
        if (username.isEmpty() || password.isEmpty()) {
            loginError.setText("Please enter your username and password.");
        } // Check if username and password are incorrect
        else if (!username.equals("admin") || !password.equals("admin")) {
            loginError.setText("Username and password mismatch.");
        } // If credentials are correct, proceed to load the main screen
        else {
            loginError.setText(""); // Clear any previous error messages
            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_loginBtnActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        // TODO add your handling code here:
        pswJField.setText("");
        usernameJField.setText("");
        loadScreen("LoginScreen"); // Load the main screen
    }//GEN-LAST:event_logOutButtonActionPerformed
    // Action Listener for the "Add" button
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        // validate
        // data linu
        // list add
        // list data table load (table clear)
        
        // Get the values from the input fields
        String productId = productIdJField.getText();
        String productName = productNameJField.getText();
        String category =  categoryJField.getText();  
        String price = priceJField.getText();
        String status =  String.valueOf(statusJComboBox.getSelectedItem());
        String description = descriptionJField.getText();
        String stockQuantity = stockQuantityJField.getText();
        String sold = soldJField.getText();
        String date= dateJField.getText();
       
        //reset background for all fields
        resetFieldColors();
        
        // call controller to add the product
        boolean isAdded= productController.addProduct(productId, productName, category, price, status, description,stockQuantity,sold,date);
        
        // If the product is added successfully
        if(isAdded){
            JOptionPane.showMessageDialog(this, "Product added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            //clear input fields
            productIdJField.setText("");
            productNameJField.setText("");
            categoryJField.setText("");
            priceJField.setText("");
            statusJComboBox.setSelectedIndex(0);
            stockQuantityJField.setText("");
            soldJField.setText("");
            descriptionJField.setText("");
            dateJField.setText("");
            
            
            // Refresh the product table
            //
            
            refreshProductTable();
            
            // update product count label
            //ggg
            
            updateNewProductCountLabel();
            // count bestseller
            updateBestSellerTable();
            //
            updateOutOfStockTable();
            //
            updateProfitLabel();
            
        } else {
            JOptionPane.showMessageDialog(this, "Validation failed. Please check the input fields.", "Error", JOptionPane.ERROR_MESSAGE);
            
            // set red
            highlightInvalidFields(productId,productName,category,price,status,description,stockQuantity,sold,date);
            
        }
    }

        //
    private void refreshProductTable() {
        // Get the product list from the controller
        List<HomeDecorModel> productList = productController.getProductList();

        // Clear the existing rows in the table
        DefaultTableModel model = (DefaultTableModel) productTbl.getModel();
        
        //model.setRowCount(0);

        // Add each product from the list to the table
        for (HomeDecorModel product : productList) {
            boolean exists = false;
            // chech if product already exist in the table
            for (int i=0; i< model.getRowCount();i++){
                if (model.getValueAt(i,0).equals(product.getProduct_Id())){
                    exists = true;
                    break;
                }
            }
        if (!exists){
        model.addRow(new Object[] {
            product.getProduct_Id(),
            product.getProduct_Name(),
            product.getCategory(),
            product.getPrice(),
            product.getStatus(),
            product.getDescription(),
            product.getStockQuantity(),
            product.getSold(),
            product.getDate()
        });
    }
        
        
}
updateNewProductCountLabel();
updateBestSellerTable();
updateOutOfStockTable();
updateProfitLabel();
}
//ggg

private void updateOldProductCountLabel() {
    //ggg
    try {
        //List<home_decor_model> productList = productController.getProductList();
        int productCount = productList.size(); // Total count of products

        if (noOfProductData != null) {
            noOfProductData.setText(String.valueOf(productCount)); // Update the label with the count
        } else {
            System.err.println("product_no label is null!");
        }
    } catch (Exception e) {
        System.err.println("Error updating product count: " + e.getMessage());
    }
    
}
//ggg
private void updateNewProductCountLabel() {
    //ggg
    try {
        List<HomeDecorModel> productList = productController.getProductList();
        int productCount = productList.size(); // Total count of products

        if (newProductData != null) {
            newProductData.setText(String.valueOf(productCount)); // Update the label with the count
        } else {
            System.err.println("product_no label is null!");
        }
    } catch (Exception e) {
        System.err.println("Error updating product count: " + e.getMessage());
    }
    
}

//ggg
private void updateBestSellerTable() {
    // Get the product list from the controller
    List<HomeDecorModel> productList = productController.getProductList();

    // Handle cases where no products are available
    if (productList == null || productList.isEmpty()) {
        DefaultTableModel model = (DefaultTableModel) bestSellerCountTbl.getModel();
        model.setRowCount(0); // Clear table
        model.addRow(new Object[]{"No products available", "", ""});
        return;
    }

    // Initialize variables to track the best seller
    HomeDecorModel bestSeller = null;
    int maxSold = 0; // Start with 0 as the minimum valid sold value

    // Find the product with the highest sold count
    for (HomeDecorModel product : productList) {
        if (product.getSold() > maxSold) {
            maxSold = product.getSold();
            bestSeller = product;
        }
    }

    // Update the table with the best-selling product's details
    DefaultTableModel model = (DefaultTableModel) bestSellerCountTbl.getModel();
    model.setRowCount(0); // Clear existing rows

    if (bestSeller != null) {
        model.addRow(new Object[]{
            bestSeller.getCategory(),
            bestSeller.getProduct_Name(),
            bestSeller.getSold()
        });
    } else {
        model.addRow(new Object[]{"No best seller available", "", ""});
    }
}

//ggg
private void updateOutOfStockTable() {
    // Retrieve the product list
    List<HomeDecorModel> productList = productController.getProductList();

    // Validate the list
    if (productList == null || productList.isEmpty()) {
        DefaultTableModel model = (DefaultTableModel) outOfStockTbl.getModel();
        model.setRowCount(0); // Clear the table
        model.addRow(new Object[]{"No products available"});
        return;
    }

    // Get the table's model
    DefaultTableModel model = (DefaultTableModel) outOfStockTbl.getModel();
    model.setRowCount(0); // Clear the table before updating

    // Add rows for out-of-stock products
    boolean hasOutOfStock = false;
    for (HomeDecorModel product : productList) {
        if ("Out Of Stock".equalsIgnoreCase(product.getStatus())) {
            model.addRow(new Object[]{
                product.getProduct_Name(), // Add product name
                product.getCategory(),     // Add category if needed
                product.getSold()          // Add sold count or other relevant data
            });
            hasOutOfStock = true;
        }
    }

    // If no products are out of stock, indicate it in the table
    if (!hasOutOfStock) {
        model.addRow(new Object[]{"All products in stock"});
    }
}
//ggg
private void updateProfitLabel() {
    // Retrieve the product list from the controller
    List<HomeDecorModel> productList = productController.getProductList();

    // Check if the product list is valid
    if (productList == null || productList.isEmpty()) {
        profitCountData.setText("No data available");
        return;
    }

    // Calculate total profit
    double totalProfit = 0;
    for (HomeDecorModel product : productList) {
        double productProfit = product.getPrice() * product.getSold(); // Price × Items Sold
        totalProfit += productProfit;
    }

    // Update the profit label
    profitCountData.setText("Total Profit: $" + String.format("%.2f", totalProfit));
}


//
private void resetFieldColors() {
    // Reset the background color of all fields to white
    productIdJField.setBackground(Color.WHITE);
    productNameJField.setBackground(Color.WHITE);
    categoryJField.setBackground(Color.WHITE);
    priceJField.setBackground(Color.WHITE);
    statusJComboBox.setBackground(Color.WHITE);
    descriptionJField.setBackground(Color.WHITE);
    stockQuantityJField.setBackground(Color.WHITE);
    soldJField.setBackground(Color.WHITE);
    dateJField.setBackground(Color.WHITE);
}

private void highlightInvalidFields(String productId, String productName, String category, String price, String status, String description,String stockQuantity, String sold, String date) {
    // Check each field and set background color to red if invalid

    if (!ValidationUtil.isValidProductId(productId)) {
        productIdJField.setBackground(Color.RED);
    }
    if (!ValidationUtil.isValidProductName(productName)) {
        productNameJField.setBackground(Color.RED);
    }
    if (!ValidationUtil.isValidCategory(category)) {
        categoryJField.setBackground(Color.RED);
    }
    if (!ValidationUtil.isValidPrice(price)) {
        priceJField.setBackground(Color.RED);
    }
    if (!ValidationUtil.isValidStatus(status)) {
        statusJComboBox.setBackground(Color.RED);
    }
    if (!ValidationUtil.isValidDescription(description)) {
        descriptionJField.setBackground(Color.RED);
        
        
    }
    if (!ValidationUtil.isValidStockQuantity(stockQuantity)) {
        stockQuantityJField.setBackground(Color.RED);
        
        
    }
    if (!ValidationUtil.isValidSold(sold)) {
        soldJField.setBackground(Color.RED);
        
        
    }
    if (!ValidationUtil.isValidDate(date)) {
        dateJField.setBackground(Color.RED);
    }

//
        
    }//GEN-LAST:event_addBtnActionPerformed
    //
   

//
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
         
         //
     // Get the values from the input fields
        String productId = productIdJField.getText();
        String productName = productNameJField.getText();
        String category =  categoryJField.getText();  
        String price = priceJField.getText();
        String status =  String.valueOf(statusJComboBox.getSelectedItem());
        String description = descriptionJField.getText();
        String stockQuantity = stockQuantityJField.getText();
        String sold = soldJField.getText();
        String date= dateJField.getText();

    // Reset background for all fields
    resetFieldColors();

    // Validate inputs
    if (!ValidationUtil.isValidProductId(productId) ||
        !ValidationUtil.isValidProductName(productName) ||
        !ValidationUtil.isValidCategory(category) ||
        !ValidationUtil.isValidPrice(price) ||
        !ValidationUtil.isValidStatus(status) ||
        !ValidationUtil.isValidDescription(description) ||
        !ValidationUtil.isValidStockQuantity(stockQuantity) ||
        !ValidationUtil.isValidSold(sold) ||
        !ValidationUtil.isValidDate(date)) {
        
        JOptionPane.showMessageDialog(this, "Validation failed. Please check the input fields.", "Error", JOptionPane.ERROR_MESSAGE);
        highlightInvalidFields(productId, productName, category, price, status, description,stockQuantity,sold, date);
        return; // Exit the method if validation fails
    }

    // Get the table model
    DefaultTableModel model = (DefaultTableModel) productTbl.getModel();

    // Search for the row with matching product ID
    boolean productFound = false;
    for (int i = 0; i < model.getRowCount(); i++) {
        if (model.getValueAt(i, 0).toString().equals(productId)) { // Compare with Product_id column
            // Update the row with new values
            model.setValueAt(productName, i, 1);
            model.setValueAt(category, i, 2);
            model.setValueAt(price, i, 3);
            model.setValueAt(status, i, 4);
            model.setValueAt(description, i, 5);
            model.setValueAt(stockQuantity, i, 6);
            model.setValueAt(sold, i, 7);
            model.setValueAt(date, i, 8);

            productFound = true;
            break;
        }
    }

    if (productFound) {
        JOptionPane.showMessageDialog(this, "Product updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        ///ggg
        
        // Clear input fields
        productIdJField.setText("");
        productNameJField.setText("");
        categoryJField.setText("");
        priceJField.setText("");
        statusJComboBox.setSelectedIndex(0);
        descriptionJField.setText("");
        stockQuantityJField.setText("");
        soldJField.setText("");
        dateJField.setText("");
    } else {
        JOptionPane.showMessageDialog(this, "Product ID not found. Update failed.", "Error", JOptionPane.ERROR_MESSAGE);
    }
         //
    /*DefaultTableModel model = (DefaultTableModel) Product_table.getModel();
    
    // Get the number of rows in the table
    int rowCount = model.getRowCount();
    
    // Check if there are rows in the table (i.e., at least one row)
    if (rowCount > 0) {
        // Get the last row index (the most recently added row)
        int lastRowIndex = rowCount - 1;
        
        // Get the data from the text fields
        // Get the values from the input fields
        String productId = Product_id.getText();
        String productName = Product_name.getText();
        String category =  Category.getText();  
        String price = Price.getText();
        String status =  Status.getText();      
        String description = Description.getText();
        String date= Date.getText();
        
        //reset background for all fields
        resetFieldColors();
        
        

        try {
            // Parse the age field as an integer
            //int productId = Integer.parseInt(productId); // Parse age as integer

            // Update the last row in the table with the new data
            model.setValueAt(productId, lastRowIndex, 0);  // Update productid in the first column
            model.setValueAt(productName, lastRowIndex, 1);  
            model.setValueAt(category, lastRowIndex, 2);  
            model.setValueAt(price, lastRowIndex, 3);  
            model.setValueAt(status, lastRowIndex, 4);  
            model.setValueAt(description, lastRowIndex, 5); 
            model.setValueAt(date, lastRowIndex, 6); 

            // Optionally clear the text fields after updating the row
            //clear input fields
            Product_id.setText("");
            Product_name.setText("");
            Category.setText("");
            Price.setText("");
            Status.setText("");
            Description.setText("");
            Date.setText("");
            
            refreshProductTable();

        } catch (NumberFormatException e) {
            // If age is not a valid number, show an error message
            JOptionPane.showMessageDialog(this, "Age must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        // If the table is empty, show an error message
        JOptionPane.showMessageDialog(this, "No data to update.", "Update Error", JOptionPane.ERROR_MESSAGE);
        // set red
        
    }*/
        /*
        String productId = Product_id.getText();
        String productName = Product_name.getText();
        String category =  Category.getText();  
        String price = Price.getText();
        String status =  Status.getText();      
        String description = Description.getText();
        String date= Date.getText();
        
        
        //reset background for all fields
        resetFieldColors();
        //validate inputs
        
        // call controller to add the product
        boolean isUpdated= productController.updateProduct(productId, productName, category, price, status, description,date);
        
        // If the product is added successfully
        if(isUpdated){
            JOptionPane.showMessageDialog(this, "Product added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            //clear input fields
            Product_id.setText("");
            Product_name.setText("");
            Category.setText("");
            Price.setText("");
            Status.setText("");
            Description.setText("");
            Date.setText("");
            // Refresh the product table
            //refreshProductTablee();
            
        } else {
            JOptionPane.showMessageDialog(this, "Validation failed. Please check the input fields.", "Error", JOptionPane.ERROR_MESSAGE);
            
            // set red
            highlightInvalidFields(productId,productName,category,price,status,description,date);
            
        }*/


        
  
        
        //
    }//GEN-LAST:event_updateBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        // Clear the input fields
        //gggg
        // Get the Product ID from the input field
    String productId = productIdJField.getText();

    // Reset background for Product ID field
    productIdJField.setBackground(Color.WHITE);

    // Validate Product ID
    if (!ValidationUtil.isValidProductId(productId)) {
        JOptionPane.showMessageDialog(this, "Invalid Product ID. Please enter a valid Product ID.", "Error", JOptionPane.ERROR_MESSAGE);
        productIdJField.setBackground(Color.RED);
        return; // Exit the method if validation fails
    }

    // Get the table model
    DefaultTableModel model = (DefaultTableModel) productTbl.getModel();

    // Search for the row with matching Product ID
    boolean productFound = false;
    for (int i = 0; i < model.getRowCount(); i++) {
        if (model.getValueAt(i, 0).toString().equals(productId)) { // Compare with Product_id column
            // Remove the row
            model.removeRow(i);
            productFound = true;
            break;
        }
    }

    if (productFound) {
        JOptionPane.showMessageDialog(this, "Product cleared successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        
        // Clear the Product ID field
        productIdJField.setText("");
       
    } else {
        JOptionPane.showMessageDialog(this, "Product ID not found. Clear operation failed.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    /*Product_id.setText("");
    Product_name.setText("");
    Category.setText("");
    Price.setText("");
    Status.setText("");
    Description.setText("");
    Date.setText("");

    // Reset the background color of all fields to white (valid state)
    resetFieldColors();

    // Optionally, you could clear the product table as well:
    DefaultTableModel model = (DefaultTableModel) Product_table.getModel();
     model.setRowCount(0);  // This clears all rows in the table
        */
    }//GEN-LAST:event_clearBtnActionPerformed

    private void retrieveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrieveBtnActionPerformed
        // TODO add your handling code here:
        //ggg
        

    // Refresh the product table to display the loaded data
    refreshProductTable();
    
    

    JOptionPane.showMessageDialog(this, "Data loaded successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

        //
        // Get the product list (which contains all registered products)
    /*DefaultTableModel model = (DefaultTableModel) Product_table.getModel();
    
    // Clear any existing rows in the table
    //model.setRowCount(0);
    
    // Add each product in the product list to the table
    for (HomeDecorModel product : productList) {
        model.addRow(new Object[]{
            product.getProduct_Id(),
            product.getProduct_Name(),
            product.getCategory(),
            product.getPrice(),
            product.getStatus(),
            product.getDescription(),
            product.getDate()
        });
    }*/
        //
    }//GEN-LAST:event_retrieveBtnActionPerformed

    private void soldJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soldJFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_soldJFieldActionPerformed

    private void stockQuantityJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockQuantityJFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockQuantityJFieldActionPerformed

    private void shopNowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shopNowBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shopNowBtnActionPerformed

    private void usernameJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameJFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameJFieldActionPerformed

    private void pswJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pswJFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pswJFieldActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
          String searchValue = searchJField.getText().trim();
    if (searchValue.isEmpty()){
        JOptionPane.showMessageDialog(this,"Please enter a product name to search");
        return;
    }
    
    if (selectedSortBy != null) {
        // Re-sort the list based on the selected criteria and order
        triggerSort(selectedSortBy, descRadioBtn.isSelected());
    }

    BinarySearchAlgorithm binarySearch = new BinarySearchAlgorithm();
    int resultIndex = binarySearch.searchByName(searchValue, productList, 0, productList.size() - 1);

    // Handle the search result
    handleSearchResult(productList, resultIndex, searchValue);
        
        
    }//GEN-LAST:event_searchBtnActionPerformed
private void handleSearchResult(List<HomeDecorModel> sortedProductList, int resultIndex, String searchBy) {
    
    List<HomeDecorModel> originalList = new ArrayList<>(sortedProductList);

    if (resultIndex != -1) { // If the product is found
        // Move the product to the top of the list
        HomeDecorModel searchedProduct = sortedProductList.remove(resultIndex);
        sortedProductList.add(0, searchedProduct);

        // Update the table with the modified list
        updateProductTable(sortedProductList);

        // Highlight the top row in the table
        productTbl.setRowSelectionInterval(0, 0); // Select the first row
        productTbl.scrollRectToVisible(productTbl.getCellRect(0, 0, true)); // Ensure visibility
        productTbl.setSelectionBackground(Color.GRAY); // Optional: Highlight background color

        JOptionPane.showMessageDialog(this, searchBy + " found and moved to the top!", "Success", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, searchBy + " not found", "Error", JOptionPane.ERROR_MESSAGE);
    }

    // After search, update the list to its original order (if you moved items to the top)
    updateProductTable(originalList);
}

/*private void handleSearchResult(List<HomeDecorModel> sortedProductList, int resultIndex, String searchBy) {
    if (resultIndex != -1) { // If the product is found
        // Move the product to the top of the list
        HomeDecorModel searchedProduct = sortedProductList.remove(resultIndex);
        sortedProductList.add(0, searchedProduct);

        // Update the table with the modified list
        updateProductTable(sortedProductList);

        // Highlight the top row in the table
        productTbl.setRowSelectionInterval(0, 0); // Select the first row
        productTbl.scrollRectToVisible(productTbl.getCellRect(0, 0, true)); // Ensure visibility
        productTbl.setSelectionBackground(Color.GRAY); // Optional: Highlight background color

        JOptionPane.showMessageDialog(this, searchBy + " found and moved to the top!", "Success", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, searchBy + " not found", "Error", JOptionPane.ERROR_MESSAGE);
    }
}*/


    private void ascRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ascRadioBtnActionPerformed
        // TODO add your handling code here:
        //ggg
        if (selectedSortBy == null){
            JOptionPane.showMessageDialog(this,"Please select a sorting criteria");
            return;
        }
        //String selectedCriteria = "id";
    triggerSort(selectedSortBy, false);  // Assuming default "id" for ascending
    }//GEN-LAST:event_ascRadioBtnActionPerformed

    private void descRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descRadioBtnActionPerformed
        // TODO add your handling code here:
        if (selectedSortBy == null){
            JOptionPane.showMessageDialog(this,"Please select a sorting criteria");
            return;
        }
        //String selectedCriteria = "id";
    triggerSort(selectedSortBy, true);  
    }//GEN-LAST:event_descRadioBtnActionPerformed

    private void productIdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productIdBtnActionPerformed
        // TODO add your handling code here:
        //String selectedCriteria = (String) ProductIdBtn.getSelectedItem();

    // Get the selected sort order (ascending or descending)
    ////boolean isDesc = DescRadioButton.isSelected();
    
    // Call the method from the controller to sort the data
    //triggerSort("Product ID", isDesc);
    selectedSortBy = "Product ID";
    JOptionPane.showMessageDialog(this,"Sorting by Product ID. Chose the sorting order");
            
    }//GEN-LAST:event_productIdBtnActionPerformed

    private void productBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productBtnActionPerformed
        // TODO add your handling code here:
        selectedSortBy = "Product Name";
        JOptionPane.showMessageDialog(this,"Sorting by Product Name. Chose the sorting order");
    }//GEN-LAST:event_productBtnActionPerformed

    private void priceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceBtnActionPerformed
        // TODO add your handling code here:
         selectedSortBy = "Price";
        JOptionPane.showMessageDialog(this,"Sorting by Price. Chose the sorting order");
    }//GEN-LAST:event_priceBtnActionPerformed

    private void searchJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJFieldActionPerformed
        
    }//GEN-LAST:event_searchJFieldActionPerformed
    

    private List<HomeDecorModel> triggerSort(String sortBy, boolean isDesc) {
        List<HomeDecorModel> sortedProductList;
    if ("Product Name".equalsIgnoreCase(sortBy)) {
        InsertionSort insertionSort = new InsertionSort();
        sortedProductList = insertionSort.sort(productList, isDesc, sortBy);
    } else if("Product ID".equalsIgnoreCase(sortBy)){
        SelectionSort selectionSort = new SelectionSort();
        sortedProductList = selectionSort.sort(productList, isDesc, sortBy);
    }else if ("Price".equalsIgnoreCase(sortBy)){
        MergeSort mergeSort = new MergeSort();
        sortedProductList = mergeSort.sort(productList, isDesc);
        
    }else{
        throw new IllegalArgumentException("Unsupported"+sortBy);
    }
    
    updateProductTable(sortedProductList);
    return sortedProductList;
}
private void updateProductTable(List<HomeDecorModel> productList) {
    // Assuming you already have the method for updating the table with new data
    DefaultTableModel model = (DefaultTableModel) productTbl.getModel();
    
    model.setRowCount(0);  // Clear existing table rows
    
    // Loop through sorted list and add them to the table
    for (HomeDecorModel product : productList) {
        model.addRow(new Object[] {
            product.getProduct_Id(),
            product.getProduct_Name(),
            product.getCategory(),
            product.getPrice(),
            product.getStatus(),
            product.getDescription(),
            product.getStockQuantity(),
            product.getSold(),
            product.getDate()
                
        });
    }
}

    //
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeDecor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeDecor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeDecor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeDecor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        HomeDecor app = new HomeDecor();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            app.setVisible(true);
        });

        app.startProgress();

    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aboutUsPic;
    private javax.swing.JPanel aboutUsPnl;
    private javax.swing.JButton addBtn;
    private javax.swing.JPanel adminDashboardPnl;
    private javax.swing.JPanel adminLogin;
    private javax.swing.JRadioButton ascRadioBtn;
    private javax.swing.JPanel bathroomPIc;
    private javax.swing.JLabel bathroomPicLbl;
    private javax.swing.JLabel bathroomTxtLbl;
    private javax.swing.JTable bestSellerCountTbl;
    private javax.swing.JPanel bestSellerPnl;
    private javax.swing.JLabel bestSellerTitle;
    private javax.swing.JTextField categoryJField;
    private javax.swing.JButton clearBtn;
    private javax.swing.JLabel customerName;
    private javax.swing.JPanel customerReviewPanel;
    private javax.swing.JLabel customerReviewTxt;
    private javax.swing.JLabel customerTxt;
    private javax.swing.JLabel customizationPic;
    private javax.swing.JLabel customizationServiceTxt;
    private javax.swing.JTextField dateJField;
    private javax.swing.JLabel deliveryPic;
    private javax.swing.JPanel deliveryPnl;
    private javax.swing.JLabel deliveryTxt;
    private javax.swing.JRadioButton descRadioBtn;
    private javax.swing.JTextField descriptionJField;
    private javax.swing.JPanel dialogPanel;
    private javax.swing.JLabel fiveStarPic;
    private javax.swing.JLabel fiveStartPict;
    private javax.swing.JLabel forgotPswTxt;
    private javax.swing.JLabel freeDeliveryTxt;
    private javax.swing.JPanel furniturePic;
    private javax.swing.JLabel furniturePicLbl;
    private javax.swing.JLabel furnitureTxtLbl;
    private javax.swing.JPanel homeDataFormPnl;
    private javax.swing.JPanel homePnl;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel lightingPic;
    private javax.swing.JPanel livingPic;
    private javax.swing.JLabel livingPicLbl;
    private javax.swing.JPanel livingRoomPic;
    private javax.swing.JLabel livingRoomTxtLbl;
    private javax.swing.JLabel livingTxtLbl;
    private javax.swing.JLabel loadingLbl;
    private javax.swing.JLabel loadingPicLbl;
    private javax.swing.JPanel loadingPnl;
    private javax.swing.JLabel loadingSidePic;
    private javax.swing.JProgressBar loadingSplashBar;
    private javax.swing.JButton logOutButton;
    private javax.swing.JPanel logOutPanel;
    private javax.swing.JLabel loginAccTxt;
    private javax.swing.JButton loginBtn;
    private javax.swing.JLabel loginError;
    private javax.swing.JPanel loginPnl;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPanel logoPanel;
    private javax.swing.JLabel logoTxt;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel mainPicHome;
    private javax.swing.JLabel mainPicHomeLbl;
    private javax.swing.JPanel mainPicHomePnl;
    private javax.swing.JTabbedPane mainScreen;
    private javax.swing.JLabel missionMainTxt;
    private javax.swing.JLabel missionPic;
    private javax.swing.JLabel missionTxt;
    private javax.swing.JLabel newAriableLbl;
    private javax.swing.JLabel newProdTitle;
    private javax.swing.JLabel newProductData;
    private javax.swing.JPanel newProductsPnl;
    private javax.swing.JLabel noOfProductData;
    private javax.swing.JPanel noOfProductPnl;
    private javax.swing.JLabel numOfProductTitle;
    private javax.swing.JPanel ourMissionPnl;
    private javax.swing.JTable outOfStockTbl;
    private javax.swing.JLabel outOfStockTxt;
    private javax.swing.JPanel plantPic;
    private javax.swing.JLabel plantPicLbl;
    private javax.swing.JLabel plantPicTxtLbl;
    private javax.swing.JButton priceBtn;
    private javax.swing.JTextField priceJField;
    private javax.swing.JButton productBtn;
    private javax.swing.JButton productIdBtn;
    private javax.swing.JTextField productIdJField;
    private javax.swing.JTextField productNameJField;
    private javax.swing.JPanel productPnl;
    private javax.swing.JTable productTbl;
    private javax.swing.JScrollPane productTblScroll;
    private javax.swing.JLabel profitCountData;
    private javax.swing.JPanel profitPnl;
    private javax.swing.JLabel profitTxt;
    private javax.swing.JPasswordField pswJField;
    private javax.swing.JLabel pswLockPic;
    private javax.swing.JLabel quoteLbl;
    private javax.swing.JLabel quoteTxtLbl;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton retrieveBtn;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JScrollPane scrollPnll;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchJField;
    private javax.swing.JLabel secondReviewName;
    private javax.swing.JPanel secondReviewPanel;
    private javax.swing.JLabel secondReviewTxt;
    private javax.swing.JPanel servicePnl;
    private javax.swing.JLabel serviceTxt;
    private javax.swing.JButton shopNowBtn;
    private javax.swing.JLabel sofaPicLbl;
    private javax.swing.JTextField soldJField;
    private javax.swing.JComboBox<String> statusJComboBox;
    private javax.swing.JTextField stockQuantityJField;
    private javax.swing.JScrollPane stockScrollPnl;
    private javax.swing.JLabel topCategoryLbl;
    private javax.swing.JLabel txtLbl;
    private javax.swing.JButton updateBtn;
    private javax.swing.JLabel userPic;
    private javax.swing.JTextField usernameJField;
    private javax.swing.JLabel visionMainTxt;
    private javax.swing.JLabel visionPic;
    private javax.swing.JPanel visionPnl;
    private javax.swing.JLabel visionTxt;
    private javax.swing.JLabel welcomePic;
    private javax.swing.JPanel welcomePnl;
    // End of variables declaration//GEN-END:variables

}
